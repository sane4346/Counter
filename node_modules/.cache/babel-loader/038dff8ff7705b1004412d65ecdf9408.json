{"ast":null,"code":"var _jsxFileName = \"/Users/kumar/Documents/fullstack/counter-app/src/component/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport { render } from '@testing-library/react';\nimport PropTypes from 'prop-types';\n\nclass Counter extends Component {\n  //constructor  - define the insitial state in constructor\n  // set the state at start in constructor , counter = 0\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CounterButton, {\n      by: 100,\n      incrementMethod: this.increment,\n      decrementMethod: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CounterButton, {\n      by: 10,\n      incrementMethod: this.increment,\n      decrementMethod: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CounterButton, {\n      by: 1,\n      incrementMethod: this.increment,\n      decrementMethod: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, this.state.counter), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }\n    }, \"Reset\")));\n  }\n\n  increment(by) {\n    console.log(`increment from parent ${by}`);\n    this.setState(prevState => {\n      return {\n        counter: prevState.counter + by\n      };\n    });\n  }\n\n  decrement(by) {\n    console.log(`increment from parent ${by}`);\n    this.setState(prevState => {\n      return {\n        counter: prevState.counter - by\n      };\n    });\n  }\n\n  reset() {\n    this.setState(() => {\n      counter: 0;\n    });\n  }\n\n}\n\nclass CounterButton extends Component {\n  //constructor  - define the insitial state in constructor\n  // set the state at start in constructor , counter = 0\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counterButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"+\", this.props.by), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"-\", this.props.by));\n  }\n\n  increment() {\n    // console.log('increment')\n    this.setState(prevState => {\n      return {\n        counter: prevState + this.props.by\n      };\n    });\n    this.props.incrementMethod(this.props.by);\n  }\n\n  decrement() {\n    // console.log('increment')\n    this.setState(prevState => {\n      return {\n        counter: prevState - this.props.by\n      };\n    });\n    this.props.decrementMethod(this.props.by);\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/kumar/Documents/fullstack/counter-app/src/component/counter/Counter.jsx"],"names":["React","Component","render","PropTypes","Counter","constructor","state","counter","increment","bind","decrement","by","console","log","setState","prevState","reset","CounterButton","props","incrementMethod","decrementMethod","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Counter.css'\nimport { render } from '@testing-library/react'\nimport PropTypes from 'prop-types'\n\n\nclass Counter extends Component {\n\n        //constructor  - define the insitial state in constructor\n    // set the state at start in constructor , counter = 0\n    constructor(){\n        super();\n        this.state = { \n            counter : 0\n        }\n        this.increment = this.increment.bind(this)\n        this.decrement = this.decrement.bind(this)\n    }\n\n    render(){\n        return (\n            <div className=\"counter\">\n                    <CounterButton by = {100} incrementMethod = {this.increment} decrementMethod = {this.decrement}></CounterButton>\n                    <CounterButton by = {10} incrementMethod = {this.increment} decrementMethod = {this.decrement}></CounterButton>\n                    <CounterButton by = {1} incrementMethod = {this.increment} decrementMethod = {this.decrement}></CounterButton>\n                <span>{this.state.counter}</span>\n                <div><button className=\"reset\">Reset</button></div>\n            </div>\n        );\n    }\n\n    increment(by){\n         console.log(`increment from parent ${by}`)\n        this.setState( \n            (prevState) => {\n            return {counter : prevState.counter + by}\n        });\n     }\n     decrement(by){\n        console.log(`increment from parent ${by}`)\n       this.setState( \n           (prevState) => {\n           return {counter : prevState.counter - by}\n       });\n    }\n    reset(){\n        \n       this.setState( \n           () => {\n           counter : 0\n       });\n    }\n}\n\nclass CounterButton extends Component {\n\n    //constructor  - define the insitial state in constructor\n    // set the state at start in constructor , counter = 0\n    constructor(){\n        super();\n        this.state = { \n            counter : 0\n        }\n        this.increment = this.increment.bind(this)\n        this.decrement = this.decrement.bind(this)\n    }\n\n    render(){\n        return(\n            <div className = \"counterButton\">\n                <button onClick = {this.increment}>+{this.props.by}</button>\n                <button onClick = {this.decrement}>-{this.props.by}</button>\n            </div>\n        )\n    }\n\n    increment(){\n       // console.log('increment')\n       this.setState( \n         (prevState) =>  {\n           return {counter : prevState + this.props.by}\n       }\n       );\n\n       this.props.incrementMethod(this.props.by)\n    }\n\n    decrement(){\n        // console.log('increment')\n        this.setState( \n          (prevState) =>  {\n            return {counter : prevState - this.props.by}\n        }\n        );\n \n        this.props.decrementMethod(this.props.by)\n     }\n}\n\nCounterButton.defaultProps = {\n    by : 1\n}\n\nCounterButton.propTypes = {\n    by : PropTypes.number\n}\nexport default Counter;"]},"metadata":{},"sourceType":"module"}